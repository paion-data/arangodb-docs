<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>_arangoimport_ on ArangoDB Documentation</title><link>http://localhost/3.11/components/tools/arangoimport/</link><description>Recent content in _arangoimport_ on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.11/components/tools/arangoimport/index.xml" rel="self" type="application/rss+xml"/><item><title>_arangoimport_ Examples JSON</title><link>http://localhost/3.11/components/tools/arangoimport/examples-json/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/components/tools/arangoimport/examples-json/</guid><description>Using JSON as data format, records are represented as JSON objects and called documents in ArangoDB. They are self-contained. Therefore, there is no need for all records in a collection to have the same attribute names or types. Documents can be inhomogeneous while data types can be fully preserved.
Input file formats arangoimport supports two formats when importing JSON data:
JSON&amp;nbsp; – JavaScript Object Notation JSON Lines&amp;nbsp; – also known as JSONL or new-line delimited JSON For any larger input files, it is recommended to use the JSON Lines format.</description></item><item><title>_arangoimport_ Examples CSV / TSV</title><link>http://localhost/3.11/components/tools/arangoimport/examples-csv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/components/tools/arangoimport/examples-csv/</guid><description>Importing CSV Data arangoimport offers the possibility to import data from CSV files. This comes handy when the data at hand is in CSV format already and you don&amp;rsquo;t want to spend time converting them to JSON for the import.
To import data from a CSV file, make sure your file contains the attribute names in the first row. All the following lines in the file are interpreted as data records and are imported.</description></item><item><title>_arangoimport_ Details</title><link>http://localhost/3.11/components/tools/arangoimport/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/components/tools/arangoimport/details/</guid><description>The most convenient method to import a lot of data into ArangoDB is to use the arangoimport command-line tool. It allows you to bulk import data records from a file into a database collection. Multiple files can be imported into the same or different collections by invoking it multiple times.
Import files are expected to be UTF-8 encoded without byte order mark (BOM)&amp;nbsp;. Other encodings are not supported, but may not raise warnings or errors.</description></item><item><title>_arangoimport_ Options</title><link>http://localhost/3.11/components/tools/arangoimport/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/components/tools/arangoimport/options/</guid><description>Usage: arangoimport [&amp;lt;options&amp;gt;]
General --auto-rate-limit Introduced in: v3.7.11
Type: boolean
Adjust the data loading rate automatically, starting at --batch-size bytes per thread per second.
This option can be specified without a value to enable it.
--backslash-escape Type: boolean
Use backslash as the escape character for quotes. Used for CSV and TSV imports.
This option can be specified without a value to enable it.
--batch-size Type: uint64
The size for individual data batches (in bytes).</description></item></channel></rss>