<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Active Failover deployments on ArangoDB Documentation</title><link>http://localhost/3.11/deploy/active-failover/</link><description>Recent content in Active Failover deployments on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.11/deploy/active-failover/index.xml" rel="self" type="application/rss+xml"/><item><title>Start an Active Failover deployment manually</title><link>http://localhost/3.11/deploy/active-failover/manual-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/deploy/active-failover/manual-start/</guid><description>An ArangoDB Active Failover setup consists of several running tasks or processes.
This section describes how to start an Active Failover by manually starting all the needed processes.
Before continuing, be sure to read the Architecture section to get a basic understanding of the underlying architecture and the involved roles in an ArangoDB Active Failover setup.
We will include commands for a local test (all processes running on a single machine) and for a more real production scenario, which makes use of 3 different machines.</description></item><item><title>Create an Active Failover deployment using the ArangoDB Starter</title><link>http://localhost/3.11/deploy/active-failover/using-the-arangodb-starter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/deploy/active-failover/using-the-arangodb-starter/</guid><description>This section describes how to start an Active Failover setup the tool Starter (the arangodb binary program).
As a precondition you should create a secret to activate authentication. The Starter provides a handy functionality to generate such a file:
arangodb create jwt-secret --secret=arangodb.secret Set appropriate privilege on the generated secret file, e.g. on Linux:
chmod 400 arangodb.secret Local Active Failover test deployment If you want to start a local Active Failover setup quickly, use the --starter.</description></item><item><title>Administrate an Active Failover deployment</title><link>http://localhost/3.11/deploy/active-failover/administration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/deploy/active-failover/administration/</guid><description>Introduction The Active Failover setup requires almost no manual administration.
You may still need to replace, upgrade or remove individual nodes in an Active Failover setup.
Determining the current Leader It is possible to determine the leader by asking any of the involved single-server instances. Just send a request to the /_api/cluster/endpoints REST API.
curl http://server.domain.org:8530/_api/cluster/endpoints { &amp;#34;error&amp;#34;: false, &amp;#34;code&amp;#34;: 200, &amp;#34;endpoints&amp;#34;: [ { &amp;#34;endpoint&amp;#34;: &amp;#34;tcp://[::1]:8530&amp;#34; }, { &amp;#34;endpoint&amp;#34;: &amp;#34;tcp://[::1]:8531&amp;#34; } ] } This API will return you all available endpoints, the first endpoint is defined to be the current Leader.</description></item></channel></rss>