<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ArangoDB Java Driver version 7 on ArangoDB Documentation</title><link>http://localhost/3.11/develop/drivers/java/reference-version-7/</link><description>Recent content in ArangoDB Java Driver version 7 on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.11/develop/drivers/java/reference-version-7/index.xml" rel="self" type="application/rss+xml"/><item><title>Driver setup</title><link>http://localhost/3.11/develop/drivers/java/reference-version-7/driver-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/develop/drivers/java/reference-version-7/driver-setup/</guid><description>The driver can be configured and instantiated using com.arangodb.ArangoDB.Builder:
ArangoDB arangoDB = new ArangoDB.Builder() // ... .build(); To customize the configuration properties can be set programmatically in the builder:
ArangoDB arangoDB = new ArangoDB.Builder() .host(&amp;#34;127.0.0.1&amp;#34;,8529) // ... .build(); or providing an implementation of com.arangodb.config.ArangoConfigProperties to the builder:
ArangoConfigProperties props = ... ArangoDB arangoDB = new ArangoDB.Builder() .loadProperties(props) // ... .build(); Implementations of com.arangodb.config.ArangoConfigProperties could supply configuration properties coming from different sources, eg.</description></item><item><title>Serialization</title><link>http://localhost/3.11/develop/drivers/java/reference-version-7/serialization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/develop/drivers/java/reference-version-7/serialization/</guid><description>The driver functionalities related to serialization and deserialization (serde) are implemented by 2 different components:
internal serde user-data serde The internal serde is based on Jackson&amp;nbsp; API and is responsible for serializing/deserializing data definition classes (in packages com.arangodb.model and com.arangodb.entity). This includes all the classes that are not user-data, such as metadata properties for databases, collections, graphs, etc.
Furthermore, it is used to serialize and deserialize user-data of the following managed types:</description></item><item><title>Changes in version 7</title><link>http://localhost/3.11/develop/drivers/java/reference-version-7/changes-in-version-7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/develop/drivers/java/reference-version-7/changes-in-version-7/</guid><description>Maven Setup &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.arangodb&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;arangodb-java-driver&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;7.x.x&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependencies&amp;gt; Gradle Setup repositories { mavenCentral() } dependencies { implementation &amp;#39;com.arangodb:arangodb-java-driver:7.x.x&amp;#39; } HTTP client The HTTP client has been changed to Vert.x WebClient&amp;nbsp;.
HTTP/2 is now supported. HTTP/2 supports multiplexing and uses 1 connection per host by default.
Cookies are not supported anymore: cookies received in the response are ignored.
Configuration changes The default communication protocol is now HTTP2_JSON (HTTP/2 with JSON content type).</description></item></channel></rss>