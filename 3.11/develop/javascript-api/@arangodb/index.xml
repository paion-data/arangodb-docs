<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The `@arangodb` module of the JavaScript API on ArangoDB Documentation</title><link>http://localhost/3.11/develop/javascript-api/@arangodb/</link><description>Recent content in The `@arangodb` module of the JavaScript API on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.11/develop/javascript-api/@arangodb/index.xml" rel="self" type="application/rss+xml"/><item><title>The `db` object of the JavaScript API</title><link>http://localhost/3.11/develop/javascript-api/@arangodb/db-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/develop/javascript-api/@arangodb/db-object/</guid><description>The db object of the JavaScript API is available in arangosh by default, and can also be imported and used in Foxx services and other server-side JavaScript contexts from the @arangodb module.
Property access db.&amp;lt;collection-name&amp;gt; and db[&amp;quot;&amp;lt;collection-name&amp;gt;&amp;quot;] return a collection object for the specified collection if it exists.
db.&amp;lt;view-name&amp;gt; and db[&amp;quot;&amp;lt;view-name&amp;gt;&amp;quot;] return a view object for the specified View if it exists.
Databases db._createDatabase(name [, options [, users]]) Creates a new database with the specified name.</description></item><item><title>The _collection_ object of the JavaScript API</title><link>http://localhost/3.11/develop/javascript-api/@arangodb/collection-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/develop/javascript-api/@arangodb/collection-object/</guid><description>The JavaScript API returns collection objects when you use the following methods of the db object from the @arangodb:
db._create(...) db._createDocumentCollection(...) db._createEdgeCollection(...) db._collections(...) db._collection(...) Square brackets in function signatures denote optional arguments. Collection collection.checksum([withRevisions [, withData]]) Calculate a checksum for the data in a collection:
The checksum operation calculates an aggregate hash value for all document keys contained in collection collection.
If the optional argument withRevisions is set to true, then the revision ids of the documents are also included in the hash calculation.</description></item><item><title>The _view_ object of the JavaScript API</title><link>http://localhost/3.11/develop/javascript-api/@arangodb/view-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/develop/javascript-api/@arangodb/view-object/</guid><description>The JavaScript API returns view objects when you use the following methods of the db object from the @arangodb module:
db._createView(...) db._views() db._view(...) Square brackets in function signatures denote optional arguments. Methods view.name() Returns the name of the View.
Examples
Get View name:
var view = db._view(&amp;#34;demoView&amp;#34;); view.name(); Show output demoView view.type() Returns the type of the View.
Examples
Get View type:
var view = db._view(&amp;#34;demoView&amp;#34;); view.type(); Show output arangosearch view.</description></item><item><title>The _cursor_ object of the JavaScript API</title><link>http://localhost/3.11/develop/javascript-api/@arangodb/cursor-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.11/develop/javascript-api/@arangodb/cursor-object/</guid><description>The JavaScript API returns cursor objects when you use the following methods of the db object from the @arangodb module in arangosh, as well as in server-side JavaScript contexts if the stream query option is enabled:
db._query(...) db._createStatement(...).execute() If a query returns a cursor, then you can use the hasNext() and next() methods to iterate over the results, or toArray() to convert them to an array.
If the number of query results is expected to be big, it is possible to limit the amount of documents transferred between the server and the client to a specific value.</description></item></channel></rss>