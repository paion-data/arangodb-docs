<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Foxx Microservices on ArangoDB Documentation</title><link>http://localhost/3.12/develop/foxx-microservices/</link><description>Recent content in Foxx Microservices on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.12/develop/foxx-microservices/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>http://localhost/3.12/develop/foxx-microservices/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/develop/foxx-microservices/getting-started/</guid><description>This practical introduction will take you from an empty folder to a first Foxx service installed in ArangoDB, with custom endpoints which can handle user input and query the database.
A video guide is also available:
Manifest We&amp;rsquo;re going to start with an empty folder. This will be the root folder of our services. You can name it something clever but for the course of this guide we&amp;rsquo;ll assume it&amp;rsquo;s called the name of your service: getting-started.</description></item><item><title>Guides</title><link>http://localhost/3.12/develop/foxx-microservices/guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/develop/foxx-microservices/guides/</guid><description> Up and running Working with routers Working with collections Writing queries Development mode Testing Foxx services Foxx in a cluster Next steps Scripts and scheduling Using Node modules Using Webpack with Foxx Authentication and sessions Linking services together Advanced topics Working with files Making requests Access from the browser</description></item><item><title>Deployment</title><link>http://localhost/3.12/develop/foxx-microservices/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/develop/foxx-microservices/deployment/</guid><description>Foxx services can be deployed in multiple ways:
Foxx CLI, a command line tool which requires Node.js
HTTP API using HTTP requests, e.g. with curl
web interface under Services
See the Foxx cluster guide for how Foxx services are distributed to Coordinators.</description></item><item><title>Foxx reference</title><link>http://localhost/3.12/develop/foxx-microservices/reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/develop/foxx-microservices/reference/</guid><description>Each Foxx service is defined by a JSON manifest specifying the entry point, any scripts defined by the service, possible configuration options and Foxx dependencies, as well as other metadata. Within a service, these options are exposed as the service context, which is also used to mount routers defining the service&amp;rsquo;s API endpoints.
Foxx also provides a number of utility modules as well as a flexible sessions middleware with different transport and storage mechanisms.</description></item></channel></rss>