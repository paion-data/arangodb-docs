<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on ArangoDB Documentation</title><link>http://localhost/3.12/components/tools/</link><description>Recent content in Tools on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.12/components/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>_arangosh_</title><link>http://localhost/3.12/components/tools/arangodb-shell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangodb-shell/</guid><description>The ArangoDB shell (arangosh) is a command-line client tool that can be used for administration of ArangoDB servers.
It offers a V8 JavaScript shell environment, in which you can use JS interfaces and modules like the db object to manage collections or run ad-hoc queries for instance, access the General Graph module or other features.
It can be used as interactive shell (REPL) as well as to execute a JavaScript string or file.</description></item><item><title>ArangoDB Starter</title><link>http://localhost/3.12/components/tools/arangodb-starter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangodb-starter/</guid><description/></item><item><title>_arangodump_</title><link>http://localhost/3.12/components/tools/arangodump/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangodump/</guid><description>Dumps are meant to be restored with arangorestore.
If you want to export for external programs to formats like JSON or CSV, see arangoexport instead. For Hot Backups see arangobackup.
arangodump can be used for all ArangoDB deployments modes (Single Instance, Cluster) and it can backup selected collections or all collections of a database, optionally including system collections. One can backup the structure, i.e. the collections with their configuration without any data, only the data stored in them, or both.</description></item><item><title>_arangorestore_</title><link>http://localhost/3.12/components/tools/arangorestore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangorestore/</guid><description>arangorestore can restore dumps created by arangodump and is therefore its counterpart.
If you want to import data in formats like JSON or CSV, see arangoimport instead.
arangorestore can restore selected collections or all collections of a backup, optionally including system collections. One can restore the structure, i.e. the collections with their configuration with or without data. Views can also be dumped or restored (either all of them or selectively).</description></item><item><title>_arangobackup_ client tool</title><link>http://localhost/3.12/components/tools/arangobackup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangobackup/</guid><description>ArangoDB Enterprise Edition In the Community Edition, use arangodump and arangorestore for logical backups. arangobackup creates instantaneous and consistent hot backups of the data and structures stored in ArangoDB.
Hot backups rely on hard link magic performed on the database&amp;rsquo;s persistence layer.
arangobackup can be used for all ArangoDB deployment modes (Single Instance, Cluster). It always creates what is most readily described as a persistence layer consistent snapshot of the entire instance.</description></item><item><title>_arangoimport_</title><link>http://localhost/3.12/components/tools/arangoimport/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangoimport/</guid><description>arangoimport can import supported text formats to ArangoDB servers.
If you want to restore backups, see arangorestore instead.</description></item><item><title>_arangoexport_</title><link>http://localhost/3.12/components/tools/arangoexport/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangoexport/</guid><description>arangoexport can export data to supported text formats from ArangoDB servers.
If you want to create backups, see arangodump instead.</description></item><item><title>arangobench</title><link>http://localhost/3.12/components/tools/arangobench/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangobench/</guid><description>arangobench is a client tool which makes network connections to an ArangoDB server in about the same way as a client application would do via an ArangoDB client driver. It thus often provides good enough throughput and performance estimates. It provides different test cases that can be executed, that reflect a broader set of use cases. It is useful to pick and run the test cases that most closely resemble typical or expected workloads.</description></item><item><title>_arangovpack_</title><link>http://localhost/3.12/components/tools/arangovpack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangovpack/</guid><description>arangovpack can check and convert between ArangoDB&amp;rsquo;s own VelocyPack&amp;nbsp; format and JSON.
It is primarily used in the development of ArangoDB, such as in testing.</description></item><item><title>_arangoinspect_</title><link>http://localhost/3.12/components/tools/arangoinspect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arangoinspect/</guid><description/></item><item><title>Foxx CLI</title><link>http://localhost/3.12/components/tools/foxx-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/foxx-cli/</guid><description>Foxx CLI is an optional tool which requires Node.js and can be installed via the package managers NPM and Yarn.
It is the successor of foxx-manager, which is deprecated and will be removed eventually. Also see Foxx Deployment for additional deployment options.
foxx-cli relies on the Foxx HTTP API.
Repository: https://github.com/arangodb/foxx-cli/&amp;nbsp;</description></item><item><title>ArangoDB Datasets</title><link>http://localhost/3.12/components/tools/arango-datasets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.12/components/tools/arango-datasets/</guid><description>You can use the arango-datasets package in conjunction with the python-arango driver to load example data into your ArangoDB deployments. The data is hosted on AWS S3. There are a number of existing datasets already available and you can view them by calling the list_datasets() method as shown below.
Install To install the Python package, you can use the pip command to directly install it from PyPi&amp;nbsp;:
pip install arango-datasets You can find the source code repository of the module on GitHub: https://github.</description></item></channel></rss>