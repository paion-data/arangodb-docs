<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on ArangoDB Documentation</title><link>http://localhost/3.10/operations/security/</link><description>Recent content in Security on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.10/operations/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Server security options</title><link>http://localhost/3.10/operations/security/security-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/operations/security/security-options/</guid><description>arangod provides a variety of options to make a setup more secure. Administrators can use these options to limit access to certain ArangoDB server functionality as well as preventing the leakage of information about the environment that a server is running in.
General security options The following security options are available:
--server.harden If this option is set to true and authentication is enabled, non-admin users will be denied access to the following REST APIs:</description></item><item><title>How to reset the root password</title><link>http://localhost/3.10/operations/security/change-root-password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/operations/security/change-root-password/</guid><description>You can reset the root password in the following way:
Stop the Server Set authentication=false in the arangod.conf file Restart the Server Note: you might need to take any needed precaution to avoid this server can be accessed from outside as currently authentication is temporarily disabled. You might do this by disabling network access or using localhost for the binding (--server.endpoint tcp://127.0.0.1:8529) Change the password using the ArangoDB web interface, or using the following command via arangosh: require(&amp;#34;@arangodb/users&amp;#34;).</description></item><item><title>Encryption at Rest</title><link>http://localhost/3.10/operations/security/encryption-at-rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/operations/security/encryption-at-rest/</guid><description>ArangoDB Enterprise Edition ArangoGraph When you store sensitive data in your ArangoDB database, you want to protect that data under all circumstances. At runtime you will protect it with SSL transport encryption and strong authentication, but when the data is already on disk, you also need protection. That is where the Encryption feature comes in.
The Encryption feature of ArangoDB will encrypt all data that ArangoDB is storing in your database before it is written to disk.</description></item><item><title>Audit logging</title><link>http://localhost/3.10/operations/security/audit-logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/operations/security/audit-logging/</guid><description>ArangoDB Enterprise Edition A similar feature is also available in the ArangoGraph Insights Platform. Configuration To enable audit logging, set the --audit.output startup option to either a file path (file://&amp;lt;path-to-file&amp;gt;) or a syslog server (syslog://&amp;lt;facility&amp;gt;).
For information about the startup options for audit logging, see ArangoDB Server Options.
Log format The general format of audit logs is as follows:
&amp;lt;time-stamp&amp;gt; | &amp;lt;server&amp;gt; | &amp;lt;topic&amp;gt; | &amp;lt;username&amp;gt; | &amp;lt;database&amp;gt; | &amp;lt;client-ip&amp;gt; | &amp;lt;authentication&amp;gt; | &amp;lt;text1&amp;gt; | &amp;lt;text2&amp;gt; | .</description></item><item><title>Securing Starter Deployments</title><link>http://localhost/3.10/operations/security/securing-starter-deployments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/operations/security/securing-starter-deployments/</guid><description>The password that is set for the root user during the installation of the ArangoDB package has no effect in case of deployments done with the tool ArangoDB Starter, as this tool creates new database directories and configuration files that are separate from those created by the stand-alone installation.
Assuming you have enabled authentication in your Starter deployment (using --auth.jwt-secret=&amp;lt;secret-file&amp;gt;), by default the root user will be created with an empty password.</description></item></channel></rss>