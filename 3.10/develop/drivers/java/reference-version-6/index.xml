<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ArangoDB Java Driver version 6 on ArangoDB Documentation</title><link>http://localhost/3.10/develop/drivers/java/reference-version-6/</link><description>Recent content in ArangoDB Java Driver version 6 on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.10/develop/drivers/java/reference-version-6/index.xml" rel="self" type="application/rss+xml"/><item><title>Driver setup (version 6)</title><link>http://localhost/3.10/develop/drivers/java/reference-version-6/driver-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/develop/drivers/java/reference-version-6/driver-setup/</guid><description>Setup with default configuration, this automatically loads a properties file arangodb.properties if exists in the classpath:
// this instance is thread-safe ArangoDB arangoDB = new ArangoDB.Builder().build(); The driver is configured with some default values:
property-key description default value arangodb.hosts ArangoDB hosts 127.0.0.1:8529 arangodb.timeout connect &amp;amp; request timeout (millisecond) 0 arangodb.user Basic Authentication User root arangodb.password Basic Authentication Password arangodb.jwt Authentication JWT arangodb.useSsl use SSL connection false arangodb.chunksize VelocyStream Chunk content-size (bytes) 30000 arangodb.</description></item><item><title>Serialization (version 6)</title><link>http://localhost/3.10/develop/drivers/java/reference-version-6/serialization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/develop/drivers/java/reference-version-6/serialization/</guid><description>While older versions of the driver used mapping features provided by the velocypack library, nowadays it is recommended to use jackson-dataformat-velocypack&amp;nbsp;, which is a VelocyPack dataformat backend for Jackson&amp;nbsp;, supporting the Streaming, Data Binding and Tree Model API styles.
Import in Maven To add it to your Maven project, add the following to pom.xml:
&amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.arangodb&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jackson-dataformat-velocypack&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;...&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; The package also depends on jackson-core, jackson-databind and jackson-annotations packages, but when using build tools like Maven or Gradle, dependencies are automatically included.</description></item></channel></rss>