<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTTP interfaces for queries on ArangoDB Documentation</title><link>http://localhost/3.10/develop/http-api/queries/</link><description>Recent content in HTTP interfaces for queries on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.10/develop/http-api/queries/index.xml" rel="self" type="application/rss+xml"/><item><title>HTTP interfaces for AQL queries</title><link>http://localhost/3.10/develop/http-api/queries/aql-queries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/develop/http-api/queries/aql-queries/</guid><description>Cursors Results of AQL queries are returned as cursors in order to batch the communication between server and client. Each batch contains a number of documents and an indication if the current batch is the final batch. Depending on the query, the total number of documents in the result set may or may not be known in advance.
If the number of documents doesn&amp;rsquo;t exceed the batch size, the full query result is returned to the client in a single round-trip.</description></item><item><title>HTTP interface for the query cache</title><link>http://localhost/3.10/develop/http-api/queries/aql-query-results-cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/develop/http-api/queries/aql-query-results-cache/</guid><description>List the entries of the AQL query results cache GET /_api/query-cache/entries Returns an array containing the AQL query results currently stored in the query results cache of the selected database. Each result is a JSON object with the following attributes:
hash: the query result&amp;rsquo;s hash query: the query string bindVars: the query&amp;rsquo;s bind parameters. this attribute is only shown if tracking for bind variables was enabled at server start size: the size of the query result and bind parameters, in bytes results: number of documents/rows in the query result started: the date and time when the query was stored in the cache hits: number of times the result was served from the cache (can be 0 for queries that were only stored in the cache but were never accessed again afterwards) runTime: the query&amp;rsquo;s run time dataSources: an array of collections/Views the query was using Responses 200 OK Is returned when the list of results can be retrieved successfully.</description></item><item><title>HTTP interface for user-defined AQL functions</title><link>http://localhost/3.10/develop/http-api/queries/user-defined-aql-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/develop/http-api/queries/user-defined-aql-functions/</guid><description>AQL user functions are a means to extend the functionality of ArangoDB&amp;rsquo;s query language (AQL) with user-defined JavaScript code.
For an overview of over AQL user functions and their implications, please refer to Extending AQL.
All user functions managed through this interface are stored in the _aqlfunctions system collection. You should not modify the documents in this collection directly, but only via the dedicated interfaces.
Create a user-defined AQL function POST /_api/aqlfunction Registers a user-defined function (UDF) written in JavaScript for the use in AQL queries in the current database.</description></item></channel></rss>