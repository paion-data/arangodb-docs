<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ArangoDB Server on ArangoDB Documentation</title><link>http://localhost/3.10/components/arangodb-server/</link><description>Recent content in ArangoDB Server on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.10/components/arangodb-server/index.xml" rel="self" type="application/rss+xml"/><item><title>ArangoDB Server Options</title><link>http://localhost/3.10/components/arangodb-server/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/components/arangodb-server/options/</guid><description>Usage: arangod [&amp;lt;options&amp;gt;]
To list the commonly used startup options with a description of each option, run the server executable in a command-line with the --help (or -h) option:
arangod --help To list all available startup options and their descriptions, use:
arangod --help-all You can specify the database directory for the server as a positional (unnamed) parameter:
arangod /path/to/datadir You can also be explicit by using a named parameter:
arangod --database.</description></item><item><title>ArangoDB Server LDAP Options</title><link>http://localhost/3.10/components/arangodb-server/ldap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/components/arangodb-server/ldap/</guid><description>ArangoDB Enterprise Edition ArangoGraph Basics Concepts The basic idea is that one can keep the user authentication setup for an ArangoDB instance (single or cluster) outside of ArangoDB in an LDAP server. A crucial feature of this is that one can add and withdraw users and permissions by only changing the LDAP server and in particular without touching the ArangoDB instance. Changes are effective in ArangoDB within a few minutes.</description></item><item><title>ArangoDB Server environment variables</title><link>http://localhost/3.10/components/arangodb-server/environment-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/components/arangodb-server/environment-variables/</guid><description>arangod inspects the following list of environment variables:
ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY
This variable can be used to override the automatic detection of the total amount of RAM present on the system. One can specify a decimal number (in bytes). Furthermore, numbers can have the following suffixes:
GB, G, gb, g: the number is multiplied by 1,000,000,000 (gigabytes). MB, M, mb, m: the number is multiplied by 1,000,000 (megabytes). KB, K, kb, k: the number is multiplied by 1,000 (kilobytes).</description></item><item><title>Storage Engine</title><link>http://localhost/3.10/components/arangodb-server/storage-engine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.10/components/arangodb-server/storage-engine/</guid><description>ArangoDB&amp;rsquo;s storage engine is based on Facebook&amp;rsquo;s RocksDB and the only storage engine available in ArangoDB 3.7 and above. It is the bottom layer of the database system.
RocksDB RocksDB is an embeddable persistent key-value store. It is a log structure database and is optimized for fast storage.
The RocksDB engine is optimized for large data-sets and allows for a steady insert performance even if the data-set is much larger than the main memory.</description></item></channel></rss>